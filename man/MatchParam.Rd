% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Function-Params.R, R/Method-Params.R
\name{MatchParam}
\alias{MatchParam}
\alias{ppm,MatchParam-method}
\alias{ppm}
\alias{ppm<-,MatchParam-method}
\alias{ppm<-}
\alias{cutoff,MatchParam-method}
\alias{cutoff}
\alias{cutoff<-,MatchParam-method}
\alias{cutoff<-}
\alias{methodMatch,MatchParam-method}
\alias{methodMatch}
\alias{methodMatch<-,MatchParam-method}
\alias{methodMatch<-}
\alias{methodScore,MatchParam-method}
\alias{methodScore}
\alias{methodScore<-,MatchParam-method}
\alias{methodScore<-}
\alias{weightMZ,MatchParam-method}
\alias{weightMZ}
\alias{weightMZ<-,MatchParam-method}
\alias{weightMZ<-}
\alias{weightIntensity,MatchParam-method}
\alias{weightIntensity}
\alias{weightIntensity<-,MatchParam-method}
\alias{weightIntensity<-}
\alias{includePrecursor,MatchParam-method}
\alias{includePrecursor}
\alias{includePrecursor<-,MatchParam-method}
\alias{includePrecursor<-}
\alias{ppmPrecursorFilter,MatchParam-method}
\alias{ppmPrecursorFilter}
\alias{ppmPrecursorFilter<-,MatchParam-method}
\alias{ppmPrecursorFilter<-}
\alias{ms2range,MatchParam-method}
\alias{ms2range}
\alias{ms2range<-,MatchParam-method}
\alias{ms2range<-}
\alias{thrIntensityAbs,MatchParam-method}
\alias{thrIntensityAbs}
\alias{thrIntensityAbs<-,MatchParam-method}
\alias{thrIntensityAbs<-}
\alias{thrIntensityRel,MatchParam-method}
\alias{thrIntensityRel}
\alias{thrIntensityRel<-,MatchParam-method}
\alias{thrIntensityRel<-}
\alias{intensityExpNormed,MatchParam-method}
\alias{intensityExpNormed}
\alias{intensityExpNormed<-,MatchParam-method}
\alias{intensityExpNormed<-}
\alias{intensityLibNormed,MatchParam-method}
\alias{intensityLibNormed}
\alias{intensityLibNormed<-,MatchParam-method}
\alias{intensityLibNormed<-}
\alias{tuneLibSpectra,MatchParam-method}
\alias{tuneLibSpectra}
\alias{tuneLibSpectra<-,MatchParam-method}
\alias{tuneLibSpectra<-}
\alias{resDefineAt,MatchParam-method}
\alias{resDefineAt}
\alias{resDefineAt<-,MatchParam-method}
\alias{resDefineAt<-}
\title{Matching parameter setup}
\usage{
MatchParam(
  ppm = 35,
  cutoff = 0.8,
  methodMatch = c("direct", "bootstrap"),
  methodScore = c("dp", "msdial", "nist", "bootstrap", "combined", "ratio", "gnps",
    "bonanza", "hybrid"),
  weightMZ = 0,
  weightIntensity = 1,
  includePrecursor = FALSE,
  ppmPrecursorFilter = 20,
  ms2range = NULL,
  thrIntensityAbs = 100,
  thrIntensityRel = 0.01,
  intensityExpNormed = FALSE,
  intensityLibNormed = TRUE,
  tuneLibSpectra = FALSE,
  useMS1ResDefine = TRUE,
  resDefineAt = 400,
  normIntensity = FALSE,
  intensityNormedMethod = c("maximum", "bonanza", "gnps", "hybrid")
)

\S4method{ppm}{MatchParam}(object)

\S4method{ppm}{MatchParam}(object) <- value

\S4method{cutoff}{MatchParam}(object)

\S4method{cutoff}{MatchParam}(object) <- value

\S4method{methodMatch}{MatchParam}(object)

\S4method{methodMatch}{MatchParam}(object) <- value

\S4method{methodScore}{MatchParam}(object)

\S4method{methodScore}{MatchParam}(object) <- value

\S4method{weightMZ}{MatchParam}(object)

\S4method{weightMZ}{MatchParam}(object) <- value

\S4method{weightIntensity}{MatchParam}(object)

\S4method{weightIntensity}{MatchParam}(object) <- value

\S4method{includePrecursor}{MatchParam}(object)

\S4method{includePrecursor}{MatchParam}(object) <- value

\S4method{ppmPrecursorFilter}{MatchParam}(object)

\S4method{ppmPrecursorFilter}{MatchParam}(object) <- value

\S4method{ms2range}{MatchParam}(object)

\S4method{ms2range}{MatchParam}(object) <- value

\S4method{thrIntensityAbs}{MatchParam}(object)

\S4method{thrIntensityAbs}{MatchParam}(object) <- value

\S4method{thrIntensityRel}{MatchParam}(object)

\S4method{thrIntensityRel}{MatchParam}(object) <- value

\S4method{intensityExpNormed}{MatchParam}(object)

\S4method{intensityExpNormed}{MatchParam}(object) <- value

\S4method{intensityLibNormed}{MatchParam}(object)

\S4method{intensityLibNormed}{MatchParam}(object) <- value

\S4method{tuneLibSpectra}{MatchParam}(object)

\S4method{tuneLibSpectra}{MatchParam}(object) <- value

\S4method{resDefineAt}{MatchParam}(object)

\S4method{resDefineAt}{MatchParam}(object) <- value
}
\arguments{
\item{ppm}{\code{numeric} ppm tolerance for MS2 m/z match}

\item{cutoff}{\code{numeric} threshold for a avaliable match}

\item{methodMatch}{\code{character} method for matching with librarial spectra
(eithor "direct" or "bootstrapping")}

\item{methodScore}{\code{character} method for scoring the MSMS match ("dp",
"msdial", "nist", "bs", "combined" are avaliable)}

\item{weightMZ}{\code{numeric} weight of m/z when scoring}

\item{weightIntensity}{\code{numeric} weight of intensity when scoring}

\item{includePrecursor}{\code{logical} if consider the precursor fragments when
matching}

\item{ms2range}{\code{numeric} mass range setup when acquiring MSMS data}

\item{thrIntensityAbs}{\code{numeric} absolute intensity threshold to be removed}

\item{thrIntensityRel}{\code{numeric} relative intensity threshold to be removed}

\item{intensityExpNormed}{\code{logical} if the spectral intensity is normalized
in experiment spectra}

\item{intensityLibNormed}{\code{logical} if the spectral intensity is normalized
in library spectra}

\item{tuneLibSpectra}{\code{logical} if apply thrIntensityAbs or thrIntensityRel
to reference}

\item{useMS1ResDefine}{\code{logical} if use resDefineAt when calculating precursor m/z tolerance}

\item{resDefineAt}{\code{numeric} m/z threshold for using ppm tolerance for MS1 or
MS2 match, for smaller m/z values, using the tolerance of ppm.ms1 * res.defineat
to mathing experimental and librarial fragments.}

\item{value}{The value for the slot.}
}
\value{
an \code{ParamMatch} object
}
\description{
\code{ppm},\code{ppm<-}: getter and setter for the \code{ppm}
    slot of the object.

\code{cutoff},\code{cutoff<-}: getter and setter for the \code{cutoff}
    slot of the object.

\code{methodMatch},\code{methodMatch<-}: getter and setter for the \code{methodMatch}
    slot of the object.

\code{methodScore},\code{methodScore<-}: getter and setter for the \code{methodScore}
    slot of the object.

\code{weightMZ},\code{weightMZ<-}: getter and setter for the \code{weightMZ}
    slot of the object.

\code{weightIntensity},\code{weightIntensity<-}: getter and setter for the \code{weightIntensity}
    slot of the object.

\code{includePrecursor},\code{includePrecursor<-}: getter and setter for the \code{includePrecursor}
    slot of the object.

\code{ppmPrecursorFilter},\code{ppmPrecursorFilter<-}: getter and setter for the \code{ppmPrecursorFilter}
    slot of the object.

\code{ms2range},\code{ms2range<-}: getter and setter for the \code{ms2range}
    slot of the object.

\code{thrIntensityAbs},\code{thrIntensityAbs<-}: getter and setter for the \code{thrIntensityAbs}
    slot of the object.

\code{thrIntensityRel},\code{thrIntensityRel<-}: getter and setter for the \code{thrIntensityRel}
    slot of the object.

\code{intensityExpNormed},\code{intensityExpNormed<-}: getter and setter for the \code{intensityExpNormed}
    slot of the object.

\code{intensityLibNormed},\code{intensityLibNormed<-}: getter and setter for the \code{intensityLibNormed}
    slot of the object.

\code{tuneLibSpectra},\code{tuneLibSpectra<-}: getter and setter for the \code{tuneLibSpectra}
    slot of the object.

\code{resDefineAt},\code{resDefineAt<-}: getter and setter for the \code{resDefineAt}
    slot of the object.
}
